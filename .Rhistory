hist(ppm,col="green")
abline(v=12,lwd=2)
abline(v=median(ppm),col="magenta",lwd=4)
names(pollution)
reg=table(pollution$region)
reg<=table(pollution$region)
reg<-table(pollution$region)
reg
barplot(reg,col="wheat", main="Number of Counties in Each Region")
boxplot(pollution, pm25~region, col="red")
boxplot(pm25~region, col="red")
boxplot(pm25~region, pollution, col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east<-subset(pollution,"east")
?subset
east<-subset(pollution,region="east")
east<-subset(pollution,region=="east")
head(east)
hist(east,col="green")
hist(east$pm25,col="green")
hist(east$pm25,col="green")
hist(ppm,col="green")
swirl()
library(swirl)
swirl()
swirl()
hist(east$pm25,col="green")
hist(east$pm25,col="green")
swirl()
hist(east$pm25,col="green")
play()
par("mar")
nxt()
hist(subset(pollution,region=="west")$pm25,col="green")
pollution(plot())
plot(pollution)
with(pollution,plot(latitude,pm25))
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude,pollution$ppm,col=pollution$region)
plot(pollution$latitude,ppm,col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west<-subset(pollution, region=="west")
plot(west$latitude,west$pm25,main="West")
plot(east$latitude,east$pm25,main="East")
par(mar = c(1, 1, 1, 1))
getwd()
swirl()
library(swirl)
swirl()
dist(dataFrame)
hc<-hclust(distxy)
plot(hc)
plot(hc,as,dendrogram(hc))
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=.4,col="red")
5
12
abline(h=.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
?kmeans()
swirl()
cmat
points(cx,cy,col=c("red","orange","purple",pch=3,cex=2,lwd=2))
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,colmean,which.min)
apply(distTmp,mean,which.min)
apply(distTmp,colMeans,which.min)
apply(distTmp,colMeans(),which.min)
dd
x<3
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
aply(distTmp2,2,which.min)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1, pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
kmObj$iter
plot(x,y,xol=kmObj$cluster,pch=19,cex=2)
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"), pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
set.seed(12345)
par(mar=rep(0.2,4))
dataMatrix<-matrix(rnorm(400),nrow=40)
head(dataMatrix)
?matrix
?image
image(1:10,1:40, t(dataMatrix),[nrow(dataMatrix):1])
image(1:10,1:40, t(dataMatrix)[nrow(dataMatrix):1])
?t
image(1:10,1:40, t(dataMatrix)[,nrow(dataMatrix):1])
heatmap(dataMatrix)
?scale
xx<-rep(c(0,5) each=5)
xx<-rep(c(0,5), each=5)
xx
xx<-rep(c(0,5), 5)
xx
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.r")
myedit("addPatt.R")
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu*%*diag*%*t(matv)
ss<-1
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v
svd2$v[,1:2]
svd2$d
dim(faceData)
a1<-(svd1$u[,1] %*% svd1$d[1])*svd1$v
ss<-2
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2<-svd1$u[,1:2]%*%svd1$d[,1:2]%*%t(svd1$v[,1:2])
sss<-2
a2<-svd1$u[,1:2]%*%diag(svd1$d[1:2])%*%t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5]%*%diag(svd1$d[1:5])%*%t(svd1$v[,1:5]))
play()
svd1$d
diag(svd1$d)
nxt()
myImage(svd1$u[,1:10]%*%diag(svd1$d[1:10])%*%t(svd1$v[,1:10]))
?image
swirl()
play()
heat.colors()
heat.colors(1)
heat.colors(100)
topo.colors(10)
nxt()
colors(10)
sample(color(),1)
sample(colors(),10)
pal<-colorRamp(c("red","blue"))
View(pal)
View(pal)
pal(0)
pal(1)
pal(seq(0,1,len=6))
play()
pal2<-colorRamp(c("red","green","blue"))
pal2(0,5)
pal2(0.5)
pal2(seq(0,1,len=6))
nxt()
p1<-colorRampPallete(c("red","blue"))
p1<-colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
p2<-colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
showMe(p2(200))
p1
?fun
?rgb
p3<-colorRampPalette(c("blue","green"), alpha=0.5)
p3(5)
plot(x,y,pch=19,col=rgb(0,0.5,0.5))
plot(x,y,pch=19,col=rgb(0,0.5,0.5,0.3))
cols<-brewer.pal(3,"BuGn")
showMe(cols)
pal<-colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano,col=pal(20))
image(volcano,col=p1(20))
x<-rnorm(10000)
y<-rnorm(10000,1,3)
smoothScatter(x,y,colramp=colorRampPalette(c("blue","yellow")))
swirl()
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1<-subset(ssd,subject=1)
sub1<-subset(ssd,subject==1)
dim(sub1)
names(sub[1:12])
names(sub[1:12,])
names(sub[,1:12])
aa
aa-1
aa<-1
names(sub[1:12])
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist<-dist(sub1[,1"3"])
mdist<-dist(sub1[,1:3])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub$CTIVITY))
myplclust(hclustering,lab.col = unclass(sub$activity))
myplclust(hclustering,lab.col = unclass(sub1$activity))
mdist<-dist(sub1[,10:12])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
svd1<-svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon<-which.max(svd1$v[2])
maxCon<-which.max(svd1$v[,2])
mdist<-dist(c(sub1[,10:12],maxCon))
aa<-2
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
names(sub1p[maxCon])
names(sub1[maxCon])
kClust<-kmeans(sub1[,-c(562,563)],centers=6)
table(kClust$cluster,sub1$activity)
kClust<-kmeans(sub1[,-c(562,563)],centers=6,nsart=100)
kClust<-kmeans(sub1[,-c(562,563)],centers=6,nstart=100)
table(kClust$cluster,sub1$activity)
dim(kClust$centers)
laying<-which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown<-which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch=19,ylab="Walk Cluster")
plot(kClust$centers[walkdown,1:12],pch=19,ylab="Walkdown Cluster")
?less
??less
?readRDS
x<-list(1:5)
x
x[1]
x[[1]]
?unique
swirl()
dima(pm0)
dim(pm0)
head(pm0)
cnames
cnames<-strsplit(cnames,"|",fixed=TRUE)
cnames
names(pm0)<-make.names(cnames[[1]][wcol])
head(pm0)
x0<-pmo$Sample.Value
x0<-pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1)<-make.names(cnames[[1]][wcol])
dim(pm1)
x1<-pm1$Sample.Value
mean(is.na(x1))
sumary(x0)
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative<-x1<0
head(negative)
sum(negative,na.rm=TRUE)
mean(negative,na.rm=TRUE)
dates<-pm1$Date
str(dates)
dates<-as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative], month)
hist(dates[negative], "month"")
l;l
)
hist(dates[negative], "month")
str(site0)
both<-intersect(site0,site1)
?intersect
both
head(pm0)
cnt0<-subset(pm0)
cnt0<-subset(pm0,State.Code==36&county.site %in% both)
cnt1<-subset(pm1,State.Code==36&county.site %in% both)
sapply(split(cnt0,cnt0$county.site),nrow)
sapply(split(cnt1,cnt1$county.site),nrow)
pm0sub<-subset(cnt0,County.Code==63 & Site.ID==2008)
pm1sub<-subset(cnt1,County.Code==63 & Site.ID==2008)
x0sub<-pm0sub$Sample.Value
x1sub<-pm1sub$Sample.Value
dates0<-as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1<-as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0,x0sub,pch=20)
abline(median(x0sub,na.rm = TRUE),lwd=2)
abline(median(x0sub,na.rm = TRUE),lwd=2)
ee
ee<-2
abline(h= median(x0sub,na.rm = TRUE),lwd=2)
plot(dates1,x1sub,pch=20)
abline(h= median(x1sub,na.rm = TRUE),lwd=2)
rng<-range(x0sub,x1sub,na.m=TRUE)
rng<-range(x0sub,x1sub,na.rm=TRUE)
rng
mn0<-with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1<-with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0<-data.frame(state=names(mno),mean=mn0)
d0<-data.frame(state=names(mn0),mean=mn0)
d1<-data.frame(state=names(mn1),mean=mn1)
mrg<-merge(d0,d1,by="state")
head(mn0)
head(d0)
dim(mrg)
head(mrg)
with(mrg,plot(rep(1,52),mrg[,2],xlim=c9.5,2.5))
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5))
""
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg,points(rep(2,52),mrg[,3]))
?segments
segments()
a<-2
segments(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
mrg[mrg$mean.x < mrg$mean.y]
mrg[mrg$mean.x < mrg$mean.y,]
getwd()
setwd(./EPA_CD)
setwd("./EPA_CD")
setwd("./EPA_CP")
setwd("./EDA_CP")
getwd()
##Above all we set language preferences to English  and save current settings
## In order to save my russian environment
curr_locale <- Sys.getlocale("LC_TIME")
## To set it in english
Sys.setlocale("LC_TIME","en_US.UTF-8")
## To come back to local setting later
## Sys.setlocale("LC_TIME",curr_locale)
rm(list=ls())
?readRDS
NEI <- readRDS("./exdata-data-NEI_data/summarySCC_PM25.rds")
SCC <- readRDS("./exdata-data-NEI_data/Source_Classification_Code.rds")
head(SCC)
str(NEI)
TEbY<- tapply(NEI$Emissions, NEI$year, sum)
str(TEbY)
?barplot
barplot(TEby,main="Total emissions from PM2.5 in USA (1999-2008)",xlab="Years",ylab="Total Emissions")
barplot(TEbY,main="Total emissions from PM2.5 in USA (1999-2008)",xlab="Years",ylab="Total Emissions")
barplot(TEbY,main="Total emissions from PM2.5 in USA (1999-2008)",xlab="Years",ylab="Total Emissions, tons", col="lightblue")
barplot(TEbY,main="Total emissions from PM2.5 in USA (1999-2008)",xlab="Years",ylab="Total Emissions, tons", col="lightblue", legend=TEbY$Emissions)
barplot(TEbY,main="Total emissions from PM2.5 in USA (1999-2008)",xlab="Years",ylab="Total Emissions, tons", col="lightblue")
axis.mult(1, mult=1000)
##Plottimg in PNG
png(filename = "./plot1.png", width = 480, height = 480, units = "px", bg = "transparent")
barplot(TEbY,main="Total emissions from PM2.5 in USA (1999-2008)",xlab="Years",ylab="Total Emissions, tons", col="lightblue")
##Closing the device
dev.off()
my.axis <-paste(axTicks(2),"MM",sep="")
axis(2,at=axTicks(2), labels=my.axis)
barplot(TEbY,main="Total emissions from PM2.5 in USA (1999-2008)",xlab="Years",ylab="Total Emissions, tons", col="lightblue")
my.axis <-paste(axTicks(2),"MM",sep="")
axis(2,at=axTicks(2), labels=my.axis)
?subset
str(NEI)
baltimore_data<- subset(NEI, fips == "24510", select=c(Emissions, Year))
baltimore_data<- subset(NEI, fips == "24510", select=c(Emissions, year))
str(baltimore_data)
barplot(TEbY_balt,main="Total emissions from PM2.5 in the Baltimore City, Maryland (1999-2008)",
xlab="Years",ylab="Total Emissions, tons", col="lightred")
TEbY_balt<- tapply(baltimore_data$Emissions, baltimore_data$year, sum)
barplot(TEbY_balt,main="Total emissions from PM2.5 in the Baltimore City, Maryland (1999-2008)",
xlab="Years",ylab="Total Emissions, tons", col="lightred")
colors()
barplot(TEbY_balt,main="Total emissions from PM2.5 in the Baltimore City, Maryland (1999-2008)",
xlab="Years",ylab="Total Emissions, tons", col="plum1")
##Plottimg in PNG
png(filename = "./plot2.png", width = 480, height = 480, units = "px", bg = "transparent")
barplot(TEbY_balt,main="Total emissions from PM2.5 in the Baltimore City, Maryland (1999-2008)",
xlab="Years",ylab="Total Emissions, tons", col="plum1")
##Closing the device
dev.off()
png(filename = "./plot2.png", width = 640, height = 640, units = "px", bg = "transparent")
barplot(TEbY_balt,main="Total emissions from PM2.5 in the Baltimore City, Maryland (1999-2008)",
xlab="Years",ylab="Total Emissions, tons", col="plum1")
##Closing the device
dev.off()
png(filename = "./plot2.png", width = 640, height = 640, units = "px", bg = "transparent")
barplot(TEbY_balt,main="Total emissions from PM2.5 in the Baltimore City, Maryland (1999-2008)",
xlab="Years",ylab="Total Emissions, tons", col="rosybrown")
##Closing the device
dev.off()
barplot(TEbY_balt,main="Total emissions from PM2.5 in the Baltimore City, Maryland (1999-2008)",
xlab="Years",ylab="Total Emissions, tons", col="mediumchid1")
barplot(TEbY_balt,main="Total emissions from PM2.5 in the Baltimore City, Maryland (1999-2008)",
xlab="Years",ylab="Total Emissions, tons", col="mediumorchid1")
barplot(TEbY_balt,main="Total emissions from PM2.5 in the Baltimore City, Maryland (1999-2008)",
xlab="Years",ylab="Total Emissions, tons", col="lightsalmon4")
barplot(TEbY_balt,main="Total emissions from PM2.5 in the Baltimore City, Maryland (1999-2008)",
xlab="Years",ylab="Total Emissions, tons", col="lightsalmon1")
##Plottimg in PNG
png(filename = "./plot2.png", width = 640, height = 640, units = "px", bg = "transparent")
barplot(TEbY_balt,main="Total emissions from PM2.5 in the Baltimore City, Maryland (1999-2008)",
xlab="Years",ylab="Total Emissions, tons", col="lightsalmon1")
##Closing the device
dev.off()
str(NEI)
baltimore_data2<- subset(NEI, fips == "24510", select=c(Emissions,type, year))
TEbY_balt_type <- with(Bbaltimore_data2, tapply(Emissions,list(type,year),sum))
TEbY_balt_type <- with(baltimore_data2, tapply(Emissions,list(type,year),sum))
str(TEbY_balt_type)
head(TEbY_balt_type)
library(ggplot2)
?aes
names(TEbY_balt_type)
names(TEbY_balt_type)
colnames(TEbY_balt_type) <- c("Emission", "type", "year")
head(TEbY_balt_type)
names(baltimore_data2)
head(baltimore_data2)
ggplot(data=baltimore_data2,
aes(x=year, y=Emission, group=type, colour=type))
+ geom_line() + geom_point() + xlab("Year") + ylab("Total Emissions (tons)")
+ ggtitle("Total PM2.5 emissions from Baltimore City, Maryland,\n by source type for the years 1999 to 2008")
baltimore_data2<- subset(NEI, fips == "24510", select=c(Emission,type, year))
baltimore_data2<- subset(NEI, fips == "24510", select=c(Emissions,type, year))
ggplot(data=baltimore_data2,
aes(x=year, y=Emissions, group=type, colour=type))
+ geom_line() + geom_point() + xlab("Year") + ylab("Total Emissions (tons)")
+ ggtitle("Total PM2.5 emissions from Baltimore City, Maryland,\n by source type for the years 1999 to 2008")
total_emissions_df <- aggregate(Emissions ~ year + type, data = NEI_subset, sum)
colnames(total_emissions_df) <- c("year", "type", "total_emissions")
NEI_subset <- subset(NEI, fips == "24510")
total_emissions_df <- aggregate(Emissions ~ year + type, data = NEI_subset, sum)
colnames(total_emissions_df) <- c("year", "type", "total_emissions")
head(total_emissions_df)
?aggregate
g <- ggplot(baltimore_data2, aes(year, Emissions, color = type))
g + geom_line(stat = "summary", fun.y = "sum") +
ylab(expression('Total PM'[2.5]*" Emissions")) +
ggtitle("Total Emissions in Baltimore City from 1999 to 2008")
?geom_line
EbY_balt_type <- aggregate(baltimore_data2$Emissions,
list(type = baltimore_data2$type, year = baltimore_data2$year), sum)
TEbY_balt_type <- aggregate(baltimore_data2$Emissions,
list(type = baltimore_data2$type, year = baltimore_data2$year), sum)
head(TEbY_balt_type)
ggplot(data=TEbY_balt_type, aes(x=year, y=Emissions, group=type, color=type)) +
geom_line() +
geom_point() +
labs(title="PM2.5 Emissions in City of Baltimore by Source Type")
colnames(TEbY_balt_type) <- c("type", "year","Emissions")
ggplot(data=TEbY_balt_type, aes(x=year, y=Emissions, group=type, color=type)) +
geom_line() +
geom_point() +
labs(title="PM2.5 Emissions in City of Baltimore by Source Type")
##Subsetting the data to obtain Baltimore's data
baltimore_data2<- subset(NEI, fips == "24510", select=c(Emissions,type, year))
##aggregating data
TEbY_balt_type <- aggregate(baltimore_data2$Emissions,
list(type = baltimore_data2$type, year = baltimore_data2$year), sum)
colnames(TEbY_balt_type) <- c("type", "year","Emissions")
##Plottimg in PNG
png(filename = "./plot3.png", width = 480, height = 6480, units = "px", bg = "transparent")
ggplot(data=TEbY_balt_type, aes(x=year, y=Emissions, group=type, color=type)) +
+     geom_line() +
+     geom_point() +
+     labs(title="PM2.5 Emissions in City of Baltimore by Source Type")
##Closing the device
dev.off()
getwd()
png(filename = "./plot3.png", width = 480, height = 6480, units = "px", bg = "transparent")
ggplot(data=TEbY_balt_type, aes(x=year, y=Emissions, group=type, color=type)) +
+     geom_line() +
+     geom_point() +
+     labs(title="PM2.5 Emissions in City of Baltimore by Source Type, tons")
##Closing the device
dev.off()
ggplot(data=TEbY_balt_type, aes(x=year, y=Emissions, group=type, color=type)) +
+     geom_line() +
+     geom_point() +
+     labs(title="PM2.5 Emissions in City of Baltimore by Source Type, tons")
ggplot(data=TEbY_balt_type, aes(x=year, y=Emissions, group=type, color=type)) +
+     geom_line() +
+     geom_point() +
+     labs(title="PM2.5 Emissions in City of Baltimore by Source Type")
